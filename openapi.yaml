openapi: 3.0.3
info:
  title: MamMates API Contract
  version: 0.0.1
  description: API contract for MamMates backend development
servers:
  - url: mammates.com
    description: Development server
paths:
  /auth/login:
    post:
      tags:
        - "Seller Auth"
      description: login service for seller
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  $ref: "./components/schemas.yaml#/components/schemas/Email"
                password:
                  $ref: "./components/schemas.yaml#/components/schemas/Password"
              required:
                - email
                - password
        required: true
      responses:
        200:
          description: Login success
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: login success
                data: null
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

  /auth/register/seller:
    post:
      tags:
        - "Seller Auth"
      description: register service for seller
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  $ref: "./components/schemas.yaml#/components/schemas/StoreName"
                address:
                  $ref: "./components/schemas.yaml#/components/schemas/Address"
                seller:
                  $ref: "./components/schemas.yaml#/components/schemas/FullName"
                email:
                  $ref: "./components/schemas.yaml#/components/schemas/Email"
                password:
                  $ref: "./components/schemas.yaml#/components/schemas/Password"
                password_repeat:
                  $ref: "./components/schemas.yaml#/components/schemas/Password"
              required:
                - "store"
                - "address"
                - "seller"
                - "email"
                - "password"
                - "password_repeat"
        required: true
      responses:
        201:
          description: Register success
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 201
                message: register success
                data: null
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

  /orders/recent:
    get:
      tags:
        - "Order"
      description: get recent 3 orders
      parameters:
        - $ref: "./components/parameters.yaml#/components/parameters/PerPage"
      responses:
        200:
          description: Success get recent orders
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: success get recent orders
                data:
                  orders:
                    - buyer: Tude Maha
                      status: 1
                    - buyer: Daffa
                      status: 2
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

  /orders:
    get:
      tags:
        - "Order"
      description: get all orders by status
      parameters:
        - $ref: "./components/parameters.yaml#/components/parameters/OrderStatus"
      responses:
        200:
          description: Success get orders
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: success get recent orders
                data:
                  orders:
                    - id: 1
                      buyer: Tude Maha
                      total: 40000
                      status: 1
                      foods:
                        - name: Donut Kentang Coklat
                          quantity: 4
                          price: 20000
                          image: https://mammates/images/ihfsdfkdsf
                        - name: Donut Ubi Mawar
                          quantity: 2
                          price: 20000
                          image: https://mammates/images/ihfsdfkdsf
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

  /orders/{id}:
    get:
      tags:
        - "Order"
      description: Get order detail by id
      parameters:
        - $ref: "./components/parameters.yaml#/components/parameters/Id"
      responses:
        200:
          description: Success get orders
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: success get recent orders
                data:
                  order:
                    invoice: MM/INV/123456
                    buyer: Tude Maha
                    time: 2023-12-05 19:45:00
                    total: 40000
                    status: 3
                    foods:
                        - name: Donut Kentang Coklat
                          quantity: 4
                          price: 20000
                          image: https://mammates/images/ihfsdfkdsf
                        - name: Donut Ubi Mawar
                          quantity: 2
                          price: 20000
                          image: https://mammates/images/ihfsdfkdsf
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"
    
    put:
      tags:
        - "Order"
      description: change order status by id
      parameters:
        - $ref: "./components/parameters.yaml#/components/parameters/Id"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  description: new status to assign
                  type: integer
                  minimum: 2
                  maximum: 3
                  example: 2
              required:
                - "status"
        required: true
      responses:
        200:
          description: Success change order's status
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: order's status changed sucessfully
                data: null
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

  /foods:
    get:
      tags:
        - "Food"
      description: get all food by sellers
      responses:
        200:
          description: Success get foods data
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: success get foods
                data:
                  foods:
                    - id: 1
                      is_valid: true
                      name: Donut Kentang Coklat
                      stock: 4
                      price: 5000
                      mam_rates: 3
                      image: https://mammates/images/ihfsdfkdsf
                    - id: 2
                      is_valid: false
                      name: Donut Ubi Mawar
                      stock: 2
                      price: 10000
                      image: https://mammates/images/ihfsdfkdsf
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

    
    post:
      tags:
        - "Food"
      description: add new food
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "./components/schemas.yaml#/components/schemas/Food"
        required: true
      responses:
        200:
          description: Success add new food
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: new food addedd successfully
                data: null
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

  /foods/{id}:
    get:
      tags:
        - "Food"
      description: get food details by id
      parameters:
        - $ref: "./components/parameters.yaml#/components/parameters/Id"
      responses:
        200:
          description: Success get food detail
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: login success
                data: 
                  food:
                    name: Donat Ubi Mawar
                    price: 5000
                    mam_rates: 3
                    image: https://mammates/images/ihfsdfkdsf
                    mam_image: https://mammates/images/ihfsdfkdsf
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

    put:
      tags:
        - "Food"
      description: update food detail
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "./components/schemas.yaml#/components/schemas/Food"
        required: true
      responses:
        200:
          description: Success update food detail
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: food detail updated successfully
                data: null
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"
    
    delete:
      tags:
        - "Food"
      description: delete food by id
      responses:
        200:
          description: Success delete food
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: food deleted successfully
                data: null
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

  /accounts/store:
    get:
      tags:
        - "Account"
      description: get store detail
      responses:
        200:
          description: Success get store detail
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: success get store detail
                data:
                  store:
                    name: Toko Pak Tude
                    address: Jalan Kampus Merdeka No. 69
                    image: https://mammates/images/ihfsdfkdsf
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

  /accounts/seller:
    get:
      tags:
        - "Account"
      description: get seller account detail
      responses:
        200:
          description: Login success
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: login success
                data:
                  account:
                    store: Toko Pak Tude
                    address: Jalan Kampus Merdeka No. 69
                    seller: Tude Maha
                    emai: user@mammates.com
                    image: https://mammates/images/ihfsdfkdsf
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

    put:
      tags:
        - "Account"
      description: update seller detail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  $ref: "./components/schemas.yaml#/components/schemas/StoreName"
                address:
                  $ref: "./components/schemas.yaml#/components/schemas/Address"
                seller:
                  $ref: "./components/schemas.yaml#/components/schemas/FullName"
                email:
                  $ref: "./components/schemas.yaml#/components/schemas/Email"
              required:
                - "store"
                - "address"
                - "seller"
                - "email"
        required: true
      responses:
        200:
          description: Success update seller detail
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: seller detail updated successfully
                data: null
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

    patch:
      tags:
        - "Account"
      description: update store profile picture
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  description: store new profile picture
                  type: string
                  format: binary
                  nullable: false
              required:
                - "image"
        required: true
      responses:
        200:
          description: Success update store profile picture
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: store profile picture updated successfully
                data: null
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"
  
  /password:
    put:
      tags:
        - "Password"
      description: change user's password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  $ref: "./components/schemas.yaml#/components/schemas/Password"
                new_password:
                  $ref: "./components/schemas.yaml#/components/schemas/Password"
                new_password_repeat:
                  $ref: "./components/schemas.yaml#/components/schemas/Password"
              required:
                - "old_password"
                - "new_password"
                - "new_password_repeat"
        required: true
      responses:
        200:
          description: Success change password
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: passowrd changed successfully
                data: null
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

  /mam_mates:
    post:
      tags:
        - "MamMates"
      description: use food images to get MamMates ML features
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  description: picture used for MamMates ML feature
                  type: string
                  format: binary
                  nullable: false
              required:
                - "image"
        required: true
      responses:
        200:
          description: Success generate MamMates ML
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: success generate MamRates ML
                data:
                  mam_mates:
                    name: Klepon
                    price: 4000
                    rating: 3
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"

  /reports:
    post:
      tags:
        - "Report"
      description: report the miss classification by ML
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  description: the right food name
                  type: string
                  minLength: 1
                  nullable: false
                  example: Donat Ubi Mawar
                price:
                  description: the right food price
                  type: integer
                  minimum: 1
                  nullable: false
                  example: 5000
                rating:
                  description: the right rating
                  type: integer
                  minimum: 1
                  nullable: false
                  example: 3
                image:
                  description: picture from the wrong classification
                  type: string
                  format: binary
                  nullable: false
              required:
                - "name"
                - "price"
                - "rating"
                - "image"
        required: true
      responses:
        200:
          description: Success send report
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yaml#/components/schemas/Response"
              example:
                status: true
                code: 200
                message: success send report
                data: null
        400:
          $ref: "./components/responses.yaml#/components/responses/400"
        401:
          $ref: "./components/responses.yaml#/components/responses/401"
        403:
          $ref: "./components/responses.yaml#/components/responses/403"
        404:
          $ref: "./components/responses.yaml#/components/responses/404"
        500:
          $ref: "./components/responses.yaml#/components/responses/500"